[{"C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\index.js":"1","C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\firebaseConfig.js":"2","C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\App.jsx":"3","C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\components\\Inicio.jsx":"4","C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\components\\Menu.jsx":"5","C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\components\\Login.jsx":"6","C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\components\\Registro.jsx":"7"},{"size":279,"mtime":1619663507605,"results":"8","hashOfConfig":"9"},{"size":651,"mtime":1619663507603,"results":"10","hashOfConfig":"9"},{"size":974,"mtime":1619663507597,"results":"11","hashOfConfig":"9"},{"size":127,"mtime":1619663507601,"results":"12","hashOfConfig":"9"},{"size":1687,"mtime":1619663507602,"results":"13","hashOfConfig":"9"},{"size":3056,"mtime":1619663507602,"results":"14","hashOfConfig":"9"},{"size":7734,"mtime":1619839505866,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1igptto",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\index.js",[],["33","34"],"C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\firebaseConfig.js",[],"C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\App.jsx",[],"C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\components\\Inicio.jsx",[],"C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\components\\Menu.jsx",[],"C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\components\\Login.jsx",["35"],"import React, { useState } from 'react';\r\nimport '../assets/css/App.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebaseConfig';\r\n\r\nimport '../App'\r\nconst Login = () =>{\r\n\r\n    const historial = useHistory()\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [msgerror, setMsgError] = useState(null)\r\n    \r\n    const LoginUsuario = (e) => {\r\n        e.preventDefault()\r\n        auth.signInWithEmailAndPassword(email, pass)\r\n        // .then( (r) => console.log(r))\r\n        .then( (userCredential) => {\r\n          // luego de logearse mandamos a las targetas\r\n          var user = userCredential.user;\r\n          alert(user)\r\n          historial.push('/')\r\n          \r\n         \r\n        })\r\n        .catch( (err) => {\r\n          // auth/wrong-password\r\n          if(err.code == 'auth/wrong-password'){\r\n            setMsgError('password incorrecto')\r\n          }\r\n          //para mas errores\r\n          alert('contrasena incorrecta')\r\n        })\r\n      }\r\n      \r\n    return (\r\n        <div className=' row mt-15'>\r\n\r\n            <div className='col'></div>\r\n            <div className='col bg-t'>\r\n\r\n                <form onSubmit={LoginUsuario} className='form-group'>\r\n\r\n\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className='input-group-prepend'>\r\n                            <span className=\"input-group-text\"> Correo</span>\r\n                        </div>\r\n                        <input\r\n                            className='form-control'\r\n                            placeholder='Introduce tu correo electronico'\r\n                            type=\"email\"\r\n                            name=\"correo\"\r\n                            onChange={(e) => { setEmail(e.target.value)}}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className='input-group-prepend'>\r\n                            <span className=\"input-group-text\">Contraseña</span>\r\n                        </div>\r\n                        <input\r\n                            className='form-control'\r\n                            placeholder='Introduce una contraseña'\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={(e) => { setPass(e.target.value)}}\r\n                        />\r\n                    </div>\r\n\r\n                    <button \r\n                    onClick= {LoginUsuario}\r\n                    className=\"btn btn-info btn-block mt-4\">\r\n                        Iniciar Sesion\r\n                   </button>\r\n\r\n                </form>\r\n\r\n                {\r\n          msgerror != null\r\n          ? (\r\n            <div>\r\n              yarn\r\n              {msgerror}\r\n            </div>\r\n          )\r\n          : (\r\n            <span></span>\r\n          )\r\n        }\r\n            </div>\r\n            <div className='col'></div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login","C:\\Users\\halex\\HealtAlex\\Health-Exercise\\src\\components\\Registro.jsx",["36","37","38","39","40"],"import React, { useState, useEffect } from 'react';\r\nimport '../assets/css/App.css';\r\nimport { store } from '../firebaseConfig';\r\nimport { toast } from \"react-toastify\";\r\n\r\n\r\n\r\nconst Registro = () => {\r\n\r\n\r\n\r\n  const [currentId, setCurrentId] = useState(\"\");\r\n  \r\n  \r\n\r\n  const initialStateValues = {\r\n    Nombres: '',\r\n    Apellidos: '',\r\n    Edad: null,\r\n    Peso: null,\r\n    Email: '',\r\n    Password: '',\r\n  };\r\n\r\n  const [values, setValues] = useState(initialStateValues);\r\n  const [sexo,setSexo]=useState(\"\");\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setValues({ ...values, [name]: value });\r\n\r\n   \r\n    \r\n  };\r\n\r\n\r\n  const registrarUsuario = async () => {\r\n    try {\r\n\r\n      await store.collection(\"registro\").doc().set(values);\r\n      toast(\"Usuario Registrado\", {\r\n        type: \"success\",\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  const validNomAp = (str) => {\r\n    var pattern = new RegExp(\r\n\r\n      \"[A-Za-z0-9]{3,30}\"\r\n\r\n    );\r\n    return !!pattern.test(str);\r\n  };\r\n\r\n  const validEdad = (str) => {\r\n\r\n    let pattern = /[1-5][1-9]/;\r\n\r\n    return !!pattern.test(str);\r\n\r\n  };\r\n\r\n  const validPeso = (str) => {\r\n    var pattern = new RegExp(\r\n\r\n     \"(^[0-9]{1,3}$|^[0-9]{1,3}\\.[0-9]{1,3}$)\"\r\n    );\r\n    return !!pattern.test(str);\r\n  };\r\n\r\n  const validEmail = (str) => {\r\n    var pattern = new RegExp(\r\n\r\n      \"^[_a-z0-9-]+(.[_a-z0-9-]+)*@[a-z0-9-]+(.[a-z0-9-]+)*(.[a-z]{2,4})$\"\r\n\r\n    );\r\n    return !!pattern.test(str);\r\n  };\r\n  const validPass = (str) => {\r\n    var pattern = new RegExp(\r\n\r\n      \"\"\r\n    );\r\n    return !!pattern.test(str);\r\n  };\r\n\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //nombres\r\n    if (!validNomAp(values.Nombres)) {\r\n      return toast(\"Nombre Invalido\", { type: \"warning\", autoClose: 1000 });\r\n    }\r\n    //Apellidos\r\n    if (!validNomAp(values.Apellidos)) {\r\n      return toast(\"Apellidos Invalido\", { type: \"warning\", autoClose: 1000 });\r\n    }\r\n    //edad\r\n    if (!validEdad(values.Edad)) {\r\n      return toast(\"Edad Invalido\", { type: \"warning\", autoClose: 1000 });\r\n    }\r\n\r\n    //peso\r\n    if (!validPeso(values.Peso)) {\r\n      return toast(\"Peso Invalido\", { type: \"warning\", autoClose: 1000 });\r\n    }\r\n    //validacion Correo\r\n    if (!validEmail(values.Email)) {\r\n      return toast(\"Correo Invalido\", { type: \"warning\", autoClose: 1000 });\r\n    }\r\n    ///Contrasenia\r\n    if (!validPass(values.Password)) {\r\n      return toast(\"Contrasenia Invalido\", { type: \"warning\", autoClose: 1000 });\r\n    }\r\n\r\n\r\n    registrarUsuario(values);\r\n    setValues({ ...initialStateValues });\r\n  };\r\n\r\n  const getLinkById = async (id) => {\r\n    const doc = await store.collection(\"registro\").doc(id).get();\r\n    setValues({ ...doc.data() });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentId === \"\") {\r\n      setValues({ ...initialStateValues });\r\n    } else {\r\n      getLinkById(currentId);\r\n    }\r\n   \r\n  }, [currentId]);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className='row mt-5'>\r\n\r\n      <div className='col'></div>\r\n      <div className='col bg-registro'>\r\n\r\n        <form className='form-group' id=\"formulario\" onSubmit={handleSubmit}>\r\n\r\n          <div className=\"input-group mb-3\">\r\n            <div className='input-group-prepend'>\r\n              <span className=\"input-group-text\">Nombres</span>\r\n            </div>\r\n            <input\r\n              className='form-control'\r\n              placeholder='Introduce tu nombre'\r\n              type=\"text\"\r\n              onChange={handleInputChange}\r\n              value={values.Nombres}\r\n              name=\"Nombres\"\r\n              required\r\n              //pattern=\"[A-Za-z]{3,30}\"\r\n              title=\"Letras. Tamaño mínimo: 3. Tamaño máximo: 30\"\r\n\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-group mb-3\">\r\n            <div className='input-group-prepend'>\r\n              <span className=\"input-group-text\">Apellidos</span>\r\n            </div>\r\n            <input\r\n              className='form-control'\r\n              placeholder='Introduce tu apellido'\r\n              type=\"text\"\r\n              onChange={handleInputChange}\r\n              value={values.Apellidos}\r\n              name=\"Apellidos\"\r\n              required\r\n              //pattern=\"[A-Za-z]{3,30}\"\r\n              title=\"Letras. Tamaño mínimo: 3. Tamaño máximo: 30\"\r\n            />\r\n          </div>\r\n\r\n\r\n          <div className=\"input-group mb-3\">\r\n            <div className='input-group-prepend'>\r\n              <span className=\"input-group-text\">Edad</span>\r\n            </div>\r\n            <input\r\n              className='form-control'\r\n              placeholder='Introduce tu Edad'\r\n              type=\"number\"\r\n              onChange={handleInputChange}\r\n              value={values.Edad}\r\n              name=\"Edad\"\r\n              minLength=\"10\"\r\n              maxLength=\"60\"\r\n              required\r\n\r\n            />\r\n\r\n            <div className='input-group-prepend'>\r\n              <span className=\"input-group-text\">Peso</span>\r\n            </div>\r\n            <input\r\n              className='form-control'\r\n              placeholder='Introduce tu Peso'\r\n              type=\"number\"\r\n              onChange={handleInputChange}\r\n              value={values.Peso}\r\n              name=\"Peso\" \r\n              minLength=\"40\"\r\n              maxLength=\"150\"\r\n              required\r\n              />\r\n          </div>\r\n\r\n          <div className=\"form-check form-check-inline mb-3\">\r\n            <div className='input-group-prepend '>\r\n              <span className=\"input-group-text mg-r\">Sexo</span>\r\n            </div>\r\n            <input\r\n              className='form-check-input'\r\n              type=\"radio\"\r\n              onChange={ handleInputChange}\r\n              name=\"Sexo\" \r\n              value='mujer'\r\n              required\r\n              \r\n            />\r\n            <label className=\"form-check-label form-check form-check-inline text-white\" for=\"inlineRadio1\">Mujer</label>\r\n            \r\n            <input\r\n              className='form-check-input'\r\n              type=\"radio\"\r\n              onChange={handleInputChange}\r\n              name=\"Sexo\" \r\n              value='hombre'\r\n              required\r\n            />\r\n            <label className=\"form-check-label form-check form-check-inline text-white\" for=\"inlineRadio2\">Hombre</label>\r\n\r\n          </div>\r\n\r\n\r\n          <div className=\"input-group mb-3\" >\r\n            <div className='input-group-prepend'>\r\n              <span className=\"input-group-text\"> Correo</span>\r\n            </div>\r\n            <input\r\n              className='form-control'\r\n              placeholder='Introduce tu correo electronico'\r\n              type=\"email\"\r\n              onChange={handleInputChange}\r\n              value={values.Email}\r\n              name=\"Email\" />\r\n          </div>\r\n\r\n          <div className=\"input-group mb-3\">\r\n            <div className='input-group-prepend'>\r\n              <span className=\"input-group-text\">Contraseña</span>\r\n            </div>\r\n            <input\r\n              className='form-control'\r\n              placeholder='Introduce una contraseña'\r\n              type=\"password\"\r\n              onChange={handleInputChange}\r\n              value={values.Password}\r\n              name=\"Password\"\r\n              minlength=\"5\" \r\n              maxLength=\"30\" required\r\n              title=\"ingrese un minimo de 5 y maximo 30 caracteres\"\r\n            />\r\n\r\n          </div>\r\n\r\n          <input\r\n            className='btn btn-info btn-block mt-4'\r\n            value='Registrar Usuario'\r\n            type=\"submit\" />\r\n        </form>\r\n\r\n      </div>\r\n      <div className='col'></div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Registro",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":28,"column":23,"nodeType":"47","messageId":"48","endLine":28,"endColumn":25},{"ruleId":"49","severity":1,"message":"50","line":12,"column":21,"nodeType":"51","messageId":"52","endLine":12,"endColumn":33},{"ruleId":"49","severity":1,"message":"53","line":26,"column":10,"nodeType":"51","messageId":"52","endLine":26,"endColumn":14},{"ruleId":"49","severity":1,"message":"54","line":26,"column":15,"nodeType":"51","messageId":"52","endLine":26,"endColumn":22},{"ruleId":"55","severity":1,"message":"56","line":68,"column":32,"nodeType":"57","messageId":"58","endLine":68,"endColumn":33,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":135,"column":6,"nodeType":"62","endLine":135,"endColumn":17,"suggestions":"63"},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setCurrentId' is assigned a value but never used.","Identifier","unusedVar","'sexo' is assigned a value but never used.","'setSexo' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["66","67"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialStateValues'. Either include it or remove the dependency array.","ArrayExpression",["68"],"no-global-assign","no-unsafe-negation",{"messageId":"69","fix":"70","desc":"71"},{"messageId":"72","fix":"73","desc":"74"},{"desc":"75","fix":"76"},"removeEscape",{"range":"77","text":"78"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"79","text":"80"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [currentId, initialStateValues]",{"range":"81","text":"82"},[1271,1272],"",[1271,1271],"\\",[2953,2964],"[currentId, initialStateValues]"]