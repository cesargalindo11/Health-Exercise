[{"C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\index.js":"1","C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\firebaseConfig.js":"2","C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\App.jsx":"3","C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\components\\Menu.jsx":"4","C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\components\\Inicio.jsx":"5","C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\components\\Registro.jsx":"6","C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\components\\Login.jsx":"7"},{"size":279,"mtime":1619933591157,"results":"8","hashOfConfig":"9"},{"size":651,"mtime":1619933591156,"results":"10","hashOfConfig":"9"},{"size":974,"mtime":1619933591151,"results":"11","hashOfConfig":"9"},{"size":1687,"mtime":1619933591155,"results":"12","hashOfConfig":"9"},{"size":127,"mtime":1619933591155,"results":"13","hashOfConfig":"9"},{"size":7659,"mtime":1619934176800,"results":"14","hashOfConfig":"9"},{"size":3056,"mtime":1619933591155,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9g8ijy",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\index.js",[],"C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\firebaseConfig.js",[],"C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\App.jsx",[],"C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\components\\Menu.jsx",[],"C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\components\\Inicio.jsx",[],"C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\components\\Registro.jsx",["31","32","33","34"],"C:\\Users\\Beimar\\Documents\\GitHub\\prueba\\Health-Exercise\\src\\components\\Login.jsx",["35"],"import React, { useState } from 'react';\r\nimport '../assets/css/App.css';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { auth } from '../firebaseConfig';\r\n\r\nimport '../App'\r\nconst Login = () =>{\r\n\r\n    const historial = useHistory()\r\n    const [email, setEmail] = useState('')\r\n    const [pass, setPass] = useState('')\r\n    const [msgerror, setMsgError] = useState(null)\r\n    \r\n    const LoginUsuario = (e) => {\r\n        e.preventDefault()\r\n        auth.signInWithEmailAndPassword(email, pass)\r\n        // .then( (r) => console.log(r))\r\n        .then( (userCredential) => {\r\n          // luego de logearse mandamos a las targetas\r\n          var user = userCredential.user;\r\n          alert(user)\r\n          historial.push('/')\r\n          \r\n         \r\n        })\r\n        .catch( (err) => {\r\n          // auth/wrong-password\r\n          if(err.code == 'auth/wrong-password'){\r\n            setMsgError('password incorrecto')\r\n          }\r\n          //para mas errores\r\n          alert('contrasena incorrecta')\r\n        })\r\n      }\r\n      \r\n    return (\r\n        <div className=' row mt-15'>\r\n\r\n            <div className='col'></div>\r\n            <div className='col bg-t'>\r\n\r\n                <form onSubmit={LoginUsuario} className='form-group'>\r\n\r\n\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className='input-group-prepend'>\r\n                            <span className=\"input-group-text\"> Correo</span>\r\n                        </div>\r\n                        <input\r\n                            className='form-control'\r\n                            placeholder='Introduce tu correo electronico'\r\n                            type=\"email\"\r\n                            name=\"correo\"\r\n                            onChange={(e) => { setEmail(e.target.value)}}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className='input-group-prepend'>\r\n                            <span className=\"input-group-text\">Contraseña</span>\r\n                        </div>\r\n                        <input\r\n                            className='form-control'\r\n                            placeholder='Introduce una contraseña'\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            onChange={(e) => { setPass(e.target.value)}}\r\n                        />\r\n                    </div>\r\n\r\n                    <button \r\n                    onClick= {LoginUsuario}\r\n                    className=\"btn btn-info btn-block mt-4\">\r\n                        Iniciar Sesion\r\n                   </button>\r\n\r\n                </form>\r\n\r\n                {\r\n          msgerror != null\r\n          ? (\r\n            <div>\r\n              yarn\r\n              {msgerror}\r\n            </div>\r\n          )\r\n          : (\r\n            <span></span>\r\n          )\r\n        }\r\n            </div>\r\n            <div className='col'></div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Login",{"ruleId":"36","severity":1,"message":"37","line":12,"column":21,"nodeType":"38","messageId":"39","endLine":12,"endColumn":33},{"ruleId":"36","severity":1,"message":"40","line":26,"column":10,"nodeType":"38","messageId":"39","endLine":26,"endColumn":14},{"ruleId":"36","severity":1,"message":"41","line":26,"column":15,"nodeType":"38","messageId":"39","endLine":26,"endColumn":22},{"ruleId":"42","severity":1,"message":"43","line":124,"column":6,"nodeType":"44","endLine":124,"endColumn":17,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":28,"column":23,"nodeType":"48","messageId":"49","endLine":28,"endColumn":25},"no-unused-vars","'setCurrentId' is assigned a value but never used.","Identifier","unusedVar","'sexo' is assigned a value but never used.","'setSexo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialStateValues'. Either include it or remove the dependency array.","ArrayExpression",["50"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"51","fix":"52"},"Update the dependencies array to be: [currentId, initialStateValues]",{"range":"53","text":"54"},[2878,2889],"[currentId, initialStateValues]"]