[{"/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/index.js":"1","/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/firebaseConfig.js":"2","/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/App.jsx":"3","/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/components/Inicio.jsx":"4","/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/components/Login.jsx":"5","/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/components/Menu.jsx":"6","/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/components/Registro.jsx":"7"},{"size":267,"mtime":1620168632192,"results":"8","hashOfConfig":"9"},{"size":628,"mtime":1619663797301,"results":"10","hashOfConfig":"9"},{"size":928,"mtime":1619663797257,"results":"11","hashOfConfig":"9"},{"size":117,"mtime":1619495238843,"results":"12","hashOfConfig":"9"},{"size":2774,"mtime":1620013126493,"results":"13","hashOfConfig":"9"},{"size":1604,"mtime":1619663797293,"results":"14","hashOfConfig":"9"},{"size":8285,"mtime":1620078107213,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cnvcpc",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/index.js",[],"/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/firebaseConfig.js",[],"/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/App.jsx",[],"/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/components/Inicio.jsx",[],"/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/components/Login.jsx",["32","33"],"import React, { useState } from 'react';\nimport '../assets/css/App.css';\nimport { useHistory } from 'react-router-dom';\nimport { auth } from '../firebaseConfig';\nimport { toast } from \"react-toastify\";\n\nimport '../App'\nconst Login = () =>{\n\n    const historial = useHistory()\n    const [email, setEmail] = useState('')\n    const [pass, setPass] = useState('')\n    const [msgerror, setMsgError] = useState(null)\n    \n    const LoginUsuario = (e) => {\n        e.preventDefault()\n        auth.signInWithEmailAndPassword(email, pass)\n\n        .then( (userCredential) => {\n          var user = userCredential.user;\n          historial.push('/')\n          \n         \n        })\n        .catch( (err) => {\n          return toast(\"Correo y/o Contraseña Incrorrecta\", { type: \"warning\", autoClose: 1000 });\n        })\n      }\n     \n\n\n      \n    return (\n        <div className=' row mt-15'>\n\n            <div className='col'></div>\n            <div className='col bg-t'>\n\n                <form onSubmit={LoginUsuario} className='form-group'>\n\n\n                    <div className=\"input-group mb-3\">\n                        <div className='input-group-prepend'>\n                            <span className=\"input-group-text\"> Correo</span>\n                        </div>\n                        <input\n                            className='form-control'\n                            placeholder='Introduce tu correo electronico'\n                            type=\"email\"\n                            name=\"correo\"\n                            onChange={(e) => { setEmail(e.target.value)}}\n                        />\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className='input-group-prepend'>\n                            <span className=\"input-group-text\">Contraseña</span>\n                        </div>\n                        <input\n                            className='form-control'\n                            placeholder='Introduce una contraseña'\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={(e) => { setPass(e.target.value)}}\n                        />\n                    </div>\n\n                    <button \n                    onClick= {LoginUsuario}\n                    className=\"btn btn-info btn-block mt-4\">\n                        Iniciar Sesion\n                   </button>\n\n                </form>\n\n                {\n          msgerror != null\n          ? (\n            <div>\n              \n              {msgerror}\n            </div>\n          )\n          : (\n            <span></span>\n          )\n        }\n            </div>\n            <div className='col'></div>\n\n        </div>\n    );\n}\n\n\nexport default Login","/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/components/Menu.jsx",[],"/home/cesar/Escritorio/Prueba Deploy/NuevaV/src/components/Registro.jsx",["34","35","36","37","38","39","40","41","42"],"import React, { useState, useEffect } from 'react';\nimport '../assets/css/App.css';\nimport { store, auth } from '../firebaseConfig';\nimport { toast } from \"react-toastify\";\n\n\n\nconst Registro = () => {\n\n\n  const [currentId, setCurrentId] = useState(\"\");\n  const [correo, setCorreo] = useState(\"\");\n  const [contra, setContra] = useState(\"\");\n  \n\n\n  const initialStateValues = {\n    Nombres: '',\n    Apellidos: '',\n    Edad: '',\n    Peso: '',\n    Email: '',\n    Password: '',\n  };\n\n\n  const [values, setValues] = useState(initialStateValues);\n  const [sexo, setSexo] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setValues({ ...values, [name]: value });\n    setCorreo(values.Email);\n    setContra(values.Password);\n    //LoginUsuario()\n\n  };\n\n  const registrarUsuario = async () => {\n\n    try {\n\n      await store.collection(\"registro\").doc().set(values);\n      toast(\"Te Registraste con Exito\", {\n        type: \"success\",\n\n      });\n\n    } catch (error) {\n      console.error(error);\n    }\n    \n  };\n\n const LoginUsuario = () => {\n\n  if(values.Email!='' && values.Password!=''){\n    auth.createUserWithEmailAndPassword(correo, contra)\n      .then((userCredential) => console.log('Usuario Registrado'))\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;       \n\n      });\n    }\n  }\n\n  const validNomAp = (str) => {\n\n    let pattern = /^(?=.{3,30}$)[a-z]+(?:\\s+[a-z]+)*$/i\n\n    return !!pattern.test(str);\n  };\n\n  const validEdad = (str) => {\n\n    let pattern = /[1-5][1-9]/;\n\n    return !!pattern.test(str);\n\n  };\n\n  const validPeso = (str) => {\n    let pattern = /^([4-8][0-9]|[0-1][0-5][0-0])$/;\n    return !!pattern.test(str);\n\n  };\n\n  const validEmail = (str) => {\n    let pattern = /^[_a-z0-9-]+(.[_a-z0-9-]+)*@[a-z0-9-]+(.[a-z0-9-]+)*(.[a-z]{2,4})$/;\n\n\n    return !!pattern.test(str);\n  };\n  const validPass = (str) => {\n    let pattern = /^[A-Za-z0-9]{5,30}/\n\n    return !!pattern.test(str);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n      //nombres\n      if (!validNomAp(values.Nombres)) {\n        return toast(\"Nombre no Valido\", { type: \"warning\", autoClose: 1000 });\n      }\n      //Apellidos\n      if (!validNomAp(values.Apellidos)) {\n        return toast(\"Apellidos no Valido\", { type: \"warning\", autoClose: 1000 });\n      }\n      //edad\n      if (!validEdad(values.Edad)) {\n        return toast(\"Edad no Valido\", { type: \"warning\", autoClose: 1000 });\n      }\n\n      //peso\n      if (!validPeso(values.Peso)) {\n        return toast(\"Peso no Valido\", { type: \"warning\", autoClose: 1000 });\n      }\n      //validacion Correo\n      if (!validEmail(values.Email)) {\n        return toast(\"Correo no Valido\", { type: \"warning\", autoClose: 1000 });\n      }\n      ///Contrasenia\n      if (!validPass(values.Password)) {\n        return toast(\"Contrasena no Valida\", { type: \"warning\", autoClose: 1000 });\n      }\n      //console.log(ban)\n     // if(ban==true){\n        \n        registrarUsuario(values);\n        setValues({ ...initialStateValues });\n      \n     // }else{      \n       //  return toast(\"Registro incorrecto. correo ya existe\", { type: \"warning\", autoClose: 1000 });\n      //}\n      \n      //registrarUsuario(values);\n      //setValues({ ...initialStateValues });\n \n\n  };\n\n  const getLinkById = async (id) => {\n    const doc = await store.collection(\"registro\").doc(id).get();\n    setValues({ ...doc.data() });\n  };\n\n  useEffect(() => {\n    if (currentId === \"\") {\n      setValues({ ...initialStateValues });\n    } else {\n      getLinkById(currentId);\n    }\n\n  }, [currentId]);\n\n\n\n\n\n  return (\n    <div className='row mt-5'>\n\n      <div className='col'></div>\n      <div className='col bg-registro'>\n\n        <form className='form-group' id=\"formulario\" onSubmit={handleSubmit}>\n\n          <div className=\"input-group mb-3\">\n            <div className='input-group-prepend'>\n              <span className=\"input-group-text\">Nombres</span>\n            </div>\n            <input\n              className='form-control'\n              placeholder='Introduce tu nombre'\n              type=\"text\"\n              onChange={handleInputChange}\n              value={values.Nombres}\n              name=\"Nombres\"\n              required\n              //pattern=\"[A-Za-z]{3,30}\"\n              title=\"Letras. Tamaño mínimo: 3. Tamaño máximo: 30\"\n\n            />\n          </div>\n\n          <div className=\"input-group mb-3\">\n            <div className='input-group-prepend'>\n              <span className=\"input-group-text\">Apellidos</span>\n            </div>\n            <input\n              className='form-control'\n              placeholder='Introduce tu apellido'\n              type=\"text\"\n              onChange={handleInputChange}\n              value={values.Apellidos}\n              name=\"Apellidos\"\n              required\n              //pattern=\"[A-Za-z]{3,30}\"\n              title=\"Letras. Tamaño mínimo: 3. Tamaño máximo: 30\"\n            />\n          </div>\n\n\n          <div className=\"input-group mb-3\">\n            <div className='input-group-prepend'>\n              <span className=\"input-group-text\">Edad</span>\n            </div>\n            <input\n              className='form-control'\n              placeholder='Introduce tu Edad'\n              type=\"number\"\n              onChange={handleInputChange}\n              value={values.Edad}\n              name=\"Edad\"\n              //minLength=\"10\"\n              //maxLength=\"60\"\n              required\n\n            />\n\n            <div className='input-group-prepend'>\n              <span className=\"input-group-text\">Peso</span>\n            </div>\n            <input\n              className='form-control'\n              placeholder='Introduce tu Peso'\n              type=\"number\"\n              onChange={handleInputChange}\n              value={values.Peso}\n              name=\"Peso\"\n              //minLength=\"40\"\n              //maxLength=\"150\"\n              required\n            />\n          </div>\n\n          <div className=\"form-check form-check-inline mb-3\">\n            <div className='input-group-prepend '>\n              <span className=\"input-group-text mg-r\">Sexo</span>\n            </div>\n            <input\n              className='form-check-input'\n              type=\"radio\"\n              onChange={handleInputChange}\n              name=\"Sexo\"\n              value='mujer'\n              required\n\n            />\n            <label className=\"form-check-label form-check form-check-inline text-white\" for=\"inlineRadio1\">Mujer</label>\n\n            <input\n              className='form-check-input'\n              type=\"radio\"\n              onChange={handleInputChange}\n              name=\"Sexo\"\n              value='hombre'\n              required\n            />\n            <label className=\"form-check-label form-check form-check-inline text-white\" for=\"inlineRadio2\">Hombre</label>\n\n          </div>\n\n\n          <div className=\"input-group mb-3\" >\n            <div className='input-group-prepend'>\n              <span className=\"input-group-text\"> Correo</span>\n            </div>\n            <input\n              className='form-control'\n              placeholder='Introduce tu correo electronico'\n              type=\"email\"\n              onChange={handleInputChange}\n              value={values.Email}\n              name=\"Email\" \n              required/>\n          </div>\n\n          <div className=\"input-group mb-3\">\n            <div className='input-group-prepend'>\n              <span className=\"input-group-text\">Contraseña</span>\n            </div>\n            <input\n              className='form-control'\n              placeholder='Introduce una contraseña'\n              type=\"password\"\n              onChange={handleInputChange}\n              value={values.Password}\n              name=\"Password\"\n              //minlength=\"5\"\n              //maxLength=\"30\" \n              //pattern=\"[A-Za-z0-9]+\"\n              title=\"ingrese de 5 a 30 caracteres alfanumericos\"\n              required\n            />\n\n          </div>\n\n          <input\n            className='btn btn-info btn-block mt-4'\n            value='Registrar Usuario'\n            type=\"submit\" />\n        </form>\n\n      </div>\n      <div className='col'></div>\n\n    </div>\n  )\n}\n\nexport default Registro\n",{"ruleId":"43","severity":1,"message":"44","line":13,"column":22,"nodeType":"45","messageId":"46","endLine":13,"endColumn":33},{"ruleId":"43","severity":1,"message":"47","line":20,"column":15,"nodeType":"45","messageId":"46","endLine":20,"endColumn":19},{"ruleId":"43","severity":1,"message":"48","line":11,"column":21,"nodeType":"45","messageId":"46","endLine":11,"endColumn":33},{"ruleId":"43","severity":1,"message":"49","line":28,"column":10,"nodeType":"45","messageId":"46","endLine":28,"endColumn":14},{"ruleId":"43","severity":1,"message":"50","line":28,"column":16,"nodeType":"45","messageId":"46","endLine":28,"endColumn":23},{"ruleId":"43","severity":1,"message":"51","line":55,"column":8,"nodeType":"45","messageId":"46","endLine":55,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":57,"column":18,"nodeType":"54","messageId":"55","endLine":57,"endColumn":20},{"ruleId":"52","severity":1,"message":"53","line":57,"column":41,"nodeType":"54","messageId":"55","endLine":57,"endColumn":43},{"ruleId":"43","severity":1,"message":"56","line":61,"column":13,"nodeType":"45","messageId":"46","endLine":61,"endColumn":22},{"ruleId":"43","severity":1,"message":"57","line":62,"column":13,"nodeType":"45","messageId":"46","endLine":62,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":156,"column":6,"nodeType":"60","endLine":156,"endColumn":17,"suggestions":"61"},"no-unused-vars","'setMsgError' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'setCurrentId' is assigned a value but never used.","'sexo' is assigned a value but never used.","'setSexo' is assigned a value but never used.","'LoginUsuario' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialStateValues'. Either include it or remove the dependency array.","ArrayExpression",["62"],{"desc":"63","fix":"64"},"Update the dependencies array to be: [currentId, initialStateValues]",{"range":"65","text":"66"},[3605,3616],"[currentId, initialStateValues]"]